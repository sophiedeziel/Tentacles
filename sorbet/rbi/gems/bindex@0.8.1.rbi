# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for types exported from the `bindex` gem.
# Please instead update this file by running `bin/tapioca gem bindex`.


# Keep backwards compatibility with the previous name.
#
# source://bindex//lib/bindex.rb#4
Bindex = Skiptrace

# source://bindex//lib/skiptrace/exception_ext.rb#1
class Exception
  # source://bindex//lib/skiptrace/exception_ext.rb#2
  def binding_locations; end
end

# source://bindex//lib/skiptrace/location.rb#1
module Skiptrace
  class << self
    # Gets the current bindings for all available Ruby frames.
    #
    # Filters the internal Rubinius and Skiptrace frames.
    def current_bindings; end
  end
end

# source://bindex//lib/skiptrace/binding_locations.rb#2
class Skiptrace::BindingLocations < ::BasicObject
  # @return [BindingLocations] a new instance of BindingLocations
  #
  # source://bindex//lib/skiptrace/binding_locations.rb#3
  def initialize(locations, bindings); end

  private

  # source://bindex//lib/skiptrace/binding_locations.rb#11
  def cached_location(location); end

  # source://bindex//lib/skiptrace/binding_locations.rb#15
  def guess_binding_around(location); end

  # source://bindex//lib/skiptrace/binding_locations.rb#21
  def method_missing(name, *args, &block); end

  # @return [Boolean]
  #
  # source://bindex//lib/skiptrace/binding_locations.rb#30
  def respond_to_missing?(name, include_all = T.unsafe(nil)); end
end

# source://bindex//lib/skiptrace/location.rb#2
class Skiptrace::Location
  # @return [Location] a new instance of Location
  #
  # source://bindex//lib/skiptrace/location.rb#5
  def initialize(location, binding); end

  # source://bindex//lib/skiptrace/location.rb#10
  def absolute_path; end

  # source://bindex//lib/skiptrace/location.rb#14
  def base_label; end

  # Returns the value of attribute binding.
  #
  # source://bindex//lib/skiptrace/location.rb#3
  def binding; end

  # source://bindex//lib/skiptrace/location.rb#18
  def inspect; end

  # source://bindex//lib/skiptrace/location.rb#22
  def label; end

  # source://bindex//lib/skiptrace/location.rb#26
  def lineno; end

  # source://bindex//lib/skiptrace/location.rb#30
  def to_s; end
end

# source://bindex//lib/skiptrace/version.rb#2
Skiptrace::VERSION = T.let(T.unsafe(nil), String)
