# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for types exported from the `react_on_rails` gem.
# Please instead update this file by running `bin/tapioca gem react_on_rails`.


# You can replace this implementation with your own for use by the
# ReactOnRails::TestHelper.ensure_assets_compiled helper
#
# source://react_on_rails//lib/react_on_rails/error.rb#3
module ReactOnRails
  class << self
    # source://react_on_rails//lib/react_on_rails/configuration.rb#13
    def configuration; end

    # @yield [configuration]
    #
    # source://react_on_rails//lib/react_on_rails/configuration.rb#6
    def configure; end
  end
end

# source://react_on_rails//lib/react_on_rails/configuration.rb#48
class ReactOnRails::Configuration
  # @return [Configuration] a new instance of Configuration
  #
  # source://react_on_rails//lib/react_on_rails/configuration.rb#63
  def initialize(node_modules_location: T.unsafe(nil), server_bundle_js_file: T.unsafe(nil), prerender: T.unsafe(nil), replay_console: T.unsafe(nil), make_generated_server_bundle_the_entrypoint: T.unsafe(nil), trace: T.unsafe(nil), development_mode: T.unsafe(nil), logging_on_server: T.unsafe(nil), server_renderer_pool_size: T.unsafe(nil), server_renderer_timeout: T.unsafe(nil), raise_on_prerender_error: T.unsafe(nil), skip_display_none: T.unsafe(nil), generated_assets_dirs: T.unsafe(nil), generated_assets_dir: T.unsafe(nil), webpack_generated_files: T.unsafe(nil), rendering_extension: T.unsafe(nil), build_test_command: T.unsafe(nil), build_production_command: T.unsafe(nil), defer_generated_component_packs: T.unsafe(nil), same_bundle_for_client_and_server: T.unsafe(nil), i18n_dir: T.unsafe(nil), i18n_yml_dir: T.unsafe(nil), i18n_output_format: T.unsafe(nil), i18n_yml_safe_load_options: T.unsafe(nil), random_dom_id: T.unsafe(nil), server_render_method: T.unsafe(nil), rendering_props_extension: T.unsafe(nil), components_subdirectory: T.unsafe(nil), auto_load_bundle: T.unsafe(nil), force_load: T.unsafe(nil)); end

  # Returns the value of attribute auto_load_bundle.
  #
  # source://react_on_rails//lib/react_on_rails/configuration.rb#49
  def auto_load_bundle; end

  # Sets the attribute auto_load_bundle
  #
  # @param value the value to set the attribute auto_load_bundle to.
  #
  # source://react_on_rails//lib/react_on_rails/configuration.rb#49
  def auto_load_bundle=(_arg0); end

  # Returns the value of attribute build_production_command.
  #
  # source://react_on_rails//lib/react_on_rails/configuration.rb#49
  def build_production_command; end

  # Sets the attribute build_production_command
  #
  # @param value the value to set the attribute build_production_command to.
  #
  # source://react_on_rails//lib/react_on_rails/configuration.rb#49
  def build_production_command=(_arg0); end

  # Returns the value of attribute build_test_command.
  #
  # source://react_on_rails//lib/react_on_rails/configuration.rb#49
  def build_test_command; end

  # Sets the attribute build_test_command
  #
  # @param value the value to set the attribute build_test_command to.
  #
  # source://react_on_rails//lib/react_on_rails/configuration.rb#49
  def build_test_command=(_arg0); end

  # Returns the value of attribute components_subdirectory.
  #
  # source://react_on_rails//lib/react_on_rails/configuration.rb#49
  def components_subdirectory; end

  # Sets the attribute components_subdirectory
  #
  # @param value the value to set the attribute components_subdirectory to.
  #
  # source://react_on_rails//lib/react_on_rails/configuration.rb#49
  def components_subdirectory=(_arg0); end

  # Returns the value of attribute defer_generated_component_packs.
  #
  # source://react_on_rails//lib/react_on_rails/configuration.rb#49
  def defer_generated_component_packs; end

  # Sets the attribute defer_generated_component_packs
  #
  # @param value the value to set the attribute defer_generated_component_packs to.
  #
  # source://react_on_rails//lib/react_on_rails/configuration.rb#49
  def defer_generated_component_packs=(_arg0); end

  # Returns the value of attribute development_mode.
  #
  # source://react_on_rails//lib/react_on_rails/configuration.rb#49
  def development_mode; end

  # Sets the attribute development_mode
  #
  # @param value the value to set the attribute development_mode to.
  #
  # source://react_on_rails//lib/react_on_rails/configuration.rb#49
  def development_mode=(_arg0); end

  # Returns the value of attribute force_load.
  #
  # source://react_on_rails//lib/react_on_rails/configuration.rb#49
  def force_load; end

  # Sets the attribute force_load
  #
  # @param value the value to set the attribute force_load to.
  #
  # source://react_on_rails//lib/react_on_rails/configuration.rb#49
  def force_load=(_arg0); end

  # Returns the value of attribute generated_assets_dir.
  #
  # source://react_on_rails//lib/react_on_rails/configuration.rb#49
  def generated_assets_dir; end

  # Sets the attribute generated_assets_dir
  #
  # @param value the value to set the attribute generated_assets_dir to.
  #
  # source://react_on_rails//lib/react_on_rails/configuration.rb#49
  def generated_assets_dir=(_arg0); end

  # Returns the value of attribute generated_assets_dirs.
  #
  # source://react_on_rails//lib/react_on_rails/configuration.rb#49
  def generated_assets_dirs; end

  # Sets the attribute generated_assets_dirs
  #
  # @param value the value to set the attribute generated_assets_dirs to.
  #
  # source://react_on_rails//lib/react_on_rails/configuration.rb#49
  def generated_assets_dirs=(_arg0); end

  # Returns the value of attribute i18n_dir.
  #
  # source://react_on_rails//lib/react_on_rails/configuration.rb#49
  def i18n_dir; end

  # Sets the attribute i18n_dir
  #
  # @param value the value to set the attribute i18n_dir to.
  #
  # source://react_on_rails//lib/react_on_rails/configuration.rb#49
  def i18n_dir=(_arg0); end

  # Returns the value of attribute i18n_output_format.
  #
  # source://react_on_rails//lib/react_on_rails/configuration.rb#49
  def i18n_output_format; end

  # Sets the attribute i18n_output_format
  #
  # @param value the value to set the attribute i18n_output_format to.
  #
  # source://react_on_rails//lib/react_on_rails/configuration.rb#49
  def i18n_output_format=(_arg0); end

  # Returns the value of attribute i18n_yml_dir.
  #
  # source://react_on_rails//lib/react_on_rails/configuration.rb#49
  def i18n_yml_dir; end

  # Sets the attribute i18n_yml_dir
  #
  # @param value the value to set the attribute i18n_yml_dir to.
  #
  # source://react_on_rails//lib/react_on_rails/configuration.rb#49
  def i18n_yml_dir=(_arg0); end

  # Returns the value of attribute i18n_yml_safe_load_options.
  #
  # source://react_on_rails//lib/react_on_rails/configuration.rb#49
  def i18n_yml_safe_load_options; end

  # Sets the attribute i18n_yml_safe_load_options
  #
  # @param value the value to set the attribute i18n_yml_safe_load_options to.
  #
  # source://react_on_rails//lib/react_on_rails/configuration.rb#49
  def i18n_yml_safe_load_options=(_arg0); end

  # Returns the value of attribute logging_on_server.
  #
  # source://react_on_rails//lib/react_on_rails/configuration.rb#49
  def logging_on_server; end

  # Sets the attribute logging_on_server
  #
  # @param value the value to set the attribute logging_on_server to.
  #
  # source://react_on_rails//lib/react_on_rails/configuration.rb#49
  def logging_on_server=(_arg0); end

  # Returns the value of attribute make_generated_server_bundle_the_entrypoint.
  #
  # source://react_on_rails//lib/react_on_rails/configuration.rb#49
  def make_generated_server_bundle_the_entrypoint; end

  # Sets the attribute make_generated_server_bundle_the_entrypoint
  #
  # @param value the value to set the attribute make_generated_server_bundle_the_entrypoint to.
  #
  # source://react_on_rails//lib/react_on_rails/configuration.rb#49
  def make_generated_server_bundle_the_entrypoint=(_arg0); end

  # Returns the value of attribute node_modules_location.
  #
  # source://react_on_rails//lib/react_on_rails/configuration.rb#49
  def node_modules_location; end

  # Sets the attribute node_modules_location
  #
  # @param value the value to set the attribute node_modules_location to.
  #
  # source://react_on_rails//lib/react_on_rails/configuration.rb#49
  def node_modules_location=(_arg0); end

  # Returns the value of attribute prerender.
  #
  # source://react_on_rails//lib/react_on_rails/configuration.rb#49
  def prerender; end

  # Sets the attribute prerender
  #
  # @param value the value to set the attribute prerender to.
  #
  # source://react_on_rails//lib/react_on_rails/configuration.rb#49
  def prerender=(_arg0); end

  # Returns the value of attribute raise_on_prerender_error.
  #
  # source://react_on_rails//lib/react_on_rails/configuration.rb#49
  def raise_on_prerender_error; end

  # Sets the attribute raise_on_prerender_error
  #
  # @param value the value to set the attribute raise_on_prerender_error to.
  #
  # source://react_on_rails//lib/react_on_rails/configuration.rb#49
  def raise_on_prerender_error=(_arg0); end

  # Returns the value of attribute random_dom_id.
  #
  # source://react_on_rails//lib/react_on_rails/configuration.rb#49
  def random_dom_id; end

  # Sets the attribute random_dom_id
  #
  # @param value the value to set the attribute random_dom_id to.
  #
  # source://react_on_rails//lib/react_on_rails/configuration.rb#49
  def random_dom_id=(_arg0); end

  # Returns the value of attribute rendering_extension.
  #
  # source://react_on_rails//lib/react_on_rails/configuration.rb#49
  def rendering_extension; end

  # Sets the attribute rendering_extension
  #
  # @param value the value to set the attribute rendering_extension to.
  #
  # source://react_on_rails//lib/react_on_rails/configuration.rb#49
  def rendering_extension=(_arg0); end

  # Returns the value of attribute rendering_props_extension.
  #
  # source://react_on_rails//lib/react_on_rails/configuration.rb#49
  def rendering_props_extension; end

  # Sets the attribute rendering_props_extension
  #
  # @param value the value to set the attribute rendering_props_extension to.
  #
  # source://react_on_rails//lib/react_on_rails/configuration.rb#49
  def rendering_props_extension=(_arg0); end

  # Returns the value of attribute replay_console.
  #
  # source://react_on_rails//lib/react_on_rails/configuration.rb#49
  def replay_console; end

  # Sets the attribute replay_console
  #
  # @param value the value to set the attribute replay_console to.
  #
  # source://react_on_rails//lib/react_on_rails/configuration.rb#49
  def replay_console=(_arg0); end

  # Returns the value of attribute same_bundle_for_client_and_server.
  #
  # source://react_on_rails//lib/react_on_rails/configuration.rb#49
  def same_bundle_for_client_and_server; end

  # Sets the attribute same_bundle_for_client_and_server
  #
  # @param value the value to set the attribute same_bundle_for_client_and_server to.
  #
  # source://react_on_rails//lib/react_on_rails/configuration.rb#49
  def same_bundle_for_client_and_server=(_arg0); end

  # Returns the value of attribute server_bundle_js_file.
  #
  # source://react_on_rails//lib/react_on_rails/configuration.rb#49
  def server_bundle_js_file; end

  # Sets the attribute server_bundle_js_file
  #
  # @param value the value to set the attribute server_bundle_js_file to.
  #
  # source://react_on_rails//lib/react_on_rails/configuration.rb#49
  def server_bundle_js_file=(_arg0); end

  # Returns the value of attribute server_render_method.
  #
  # source://react_on_rails//lib/react_on_rails/configuration.rb#49
  def server_render_method; end

  # Sets the attribute server_render_method
  #
  # @param value the value to set the attribute server_render_method to.
  #
  # source://react_on_rails//lib/react_on_rails/configuration.rb#49
  def server_render_method=(_arg0); end

  # Returns the value of attribute server_renderer_pool_size.
  #
  # source://react_on_rails//lib/react_on_rails/configuration.rb#49
  def server_renderer_pool_size; end

  # Sets the attribute server_renderer_pool_size
  #
  # @param value the value to set the attribute server_renderer_pool_size to.
  #
  # source://react_on_rails//lib/react_on_rails/configuration.rb#49
  def server_renderer_pool_size=(_arg0); end

  # Returns the value of attribute server_renderer_timeout.
  #
  # source://react_on_rails//lib/react_on_rails/configuration.rb#49
  def server_renderer_timeout; end

  # Sets the attribute server_renderer_timeout
  #
  # @param value the value to set the attribute server_renderer_timeout to.
  #
  # source://react_on_rails//lib/react_on_rails/configuration.rb#49
  def server_renderer_timeout=(_arg0); end

  # on ReactOnRails
  #
  # source://react_on_rails//lib/react_on_rails/configuration.rb#119
  def setup_config_values; end

  # Returns the value of attribute skip_display_none.
  #
  # source://react_on_rails//lib/react_on_rails/configuration.rb#49
  def skip_display_none; end

  # Sets the attribute skip_display_none
  #
  # @param value the value to set the attribute skip_display_none to.
  #
  # source://react_on_rails//lib/react_on_rails/configuration.rb#49
  def skip_display_none=(_arg0); end

  # Returns the value of attribute trace.
  #
  # source://react_on_rails//lib/react_on_rails/configuration.rb#49
  def trace; end

  # Sets the attribute trace
  #
  # @param value the value to set the attribute trace to.
  #
  # source://react_on_rails//lib/react_on_rails/configuration.rb#49
  def trace=(_arg0); end

  # Returns the value of attribute webpack_generated_files.
  #
  # source://react_on_rails//lib/react_on_rails/configuration.rb#49
  def webpack_generated_files; end

  # Sets the attribute webpack_generated_files
  #
  # @param value the value to set the attribute webpack_generated_files to.
  #
  # source://react_on_rails//lib/react_on_rails/configuration.rb#49
  def webpack_generated_files=(_arg0); end

  private

  # @raise [ReactOnRails::Error]
  #
  # source://react_on_rails//lib/react_on_rails/configuration.rb#145
  def adjust_precompile_task; end

  # source://react_on_rails//lib/react_on_rails/configuration.rb#133
  def check_autobundling_requirements; end

  # @raise [ReactOnRails::Error]
  #
  # source://react_on_rails//lib/react_on_rails/configuration.rb#198
  def check_server_render_method_is_only_execjs; end

  # source://react_on_rails//lib/react_on_rails/configuration.rb#266
  def compile_command_conflict_message; end

  # source://react_on_rails//lib/react_on_rails/configuration.rb#217
  def configure_generated_assets_dirs_deprecation; end

  # source://react_on_rails//lib/react_on_rails/configuration.rb#250
  def configure_skip_display_none_deprecation; end

  # source://react_on_rails//lib/react_on_rails/configuration.rb#210
  def ensure_generated_assets_dir_present; end

  # source://react_on_rails//lib/react_on_rails/configuration.rb#241
  def ensure_webpack_generated_files_exists; end

  # source://react_on_rails//lib/react_on_rails/configuration.rb#175
  def error_if_using_packer_and_generated_assets_dir_not_match_public_output_path; end

  # @raise [ReactOnRails::Error]
  #
  # source://react_on_rails//lib/react_on_rails/configuration.rb#256
  def raise_missing_components_subdirectory; end
end

# source://react_on_rails//lib/react_on_rails/controller.rb#4
module ReactOnRails::Controller
  # Separate initialization of store from react_component allows multiple react_component calls to
  # use the same Redux store.
  #
  # store_name: name of the store, corresponding to your call to ReactOnRails.registerStores in your
  #             JavaScript code.
  # props: Named parameter props which is a Ruby Hash or JSON string which contains the properties
  #        to pass to the redux store.
  #
  # Be sure to include view helper `redux_store_hydration_data` at the end of your layout or view
  # or else there will be no client side hydration of your stores.
  #
  # source://react_on_rails//lib/react_on_rails/controller.rb#15
  def redux_store(store_name, props: T.unsafe(nil)); end
end

# source://react_on_rails//lib/react_on_rails/configuration.rb#11
ReactOnRails::DEFAULT_GENERATED_ASSETS_DIR = T.let(T.unsafe(nil), String)

# source://react_on_rails//lib/react_on_rails/engine.rb#6
class ReactOnRails::Engine < ::Rails::Engine
  class << self
    private

    # source://activesupport/8.0.1/lib/active_support/class_attribute.rb#15
    def __class_attr___callbacks; end

    # source://activesupport/8.0.1/lib/active_support/class_attribute.rb#17
    def __class_attr___callbacks=(new_value); end
  end
end

# source://react_on_rails//lib/react_on_rails/error.rb#4
class ReactOnRails::Error < ::StandardError; end

# source://react_on_rails//lib/react_on_rails/git_utils.rb#6
module ReactOnRails::GitUtils
  class << self
    # @return [Boolean]
    #
    # source://react_on_rails//lib/react_on_rails/git_utils.rb#7
    def uncommitted_changes?(message_handler, git_installed: T.unsafe(nil)); end
  end
end

# source://react_on_rails//lib/react_on_rails/helper.rb#16
module ReactOnRails::Helper
  include ::ReactOnRails::Utils::Required

  # source://react_on_rails//lib/react_on_rails/helper.rb#302
  def json_safe_and_pretty(hash_or_string); end

  # source://react_on_rails//lib/react_on_rails/helper.rb#374
  def load_pack_for_generated_component(react_component_name, render_options); end

  # This is the definitive list of the default values used for the rails_context, which is the
  # second parameter passed to both component and store Render-Functions.
  # This method can be called from views and from the controller, as `helpers.rails_context`
  #
  #
  # source://react_on_rails//lib/react_on_rails/helper.rb#320
  def rails_context(server_side: T.unsafe(nil)); end

  # react_component_name: can be a React function or class component or a "Render-Function".
  # "Render-Functions" differ from a React function in that they take two parameters, the
  #   props and the railsContext, like this:
  #
  #   let MyReactComponentApp = (props, railsContext) => <MyReactComponent {...props}/>;
  #
  #   Alternately, you can define the Render-Function with an additional property
  #   `.renderFunction = true`:
  #
  #   let MyReactComponentApp = (props) => <MyReactComponent {...props}/>;
  #   MyReactComponent.renderFunction = true;
  #
  #   Exposing the react_component_name is necessary to both a plain ReactComponent as well as
  #     a generator:
  #   See README.md for how to "register" your react components.
  #   See spec/dummy/client/app/packs/server-bundle.js and
  #     spec/dummy/client/app/packs/client-bundle.js for examples of this.
  #
  # options:
  #   props: Ruby Hash or JSON string which contains the properties to pass to the react object. Do
  #      not pass any props if you are separately initializing the store by the `redux_store` helper.
  #   prerender: <true/false> set to false when debugging!
  #   id: You can optionally set the id, or else a unique one is automatically generated.
  #   html_options: You can set other html attributes that will go on this component
  #   trace: <true/false> set to true to print additional debugging information in the browser
  #          default is true for development, off otherwise
  #   replay_console: <true/false> Default is true. False will disable echoing server rendering
  #                   logs to browser. While this can make troubleshooting server rendering difficult,
  #                   so long as you have the default configuration of logging_on_server set to
  #                   true, you'll still see the errors on the server.
  #   raise_on_prerender_error: <true/false> Default to false. True will raise exception on server
  #      if the JS code throws
  # Any other options are passed to the content tag, including the id.
  # random_dom_id can be set to override the default from the config/initializers. That's only
  # used if you have multiple instance of the same component on the Rails view.
  #
  # source://react_on_rails//lib/react_on_rails/helper.rb#56
  def react_component(component_name, options = T.unsafe(nil)); end

  # react_component_hash is used to return multiple HTML strings for server rendering, such as for
  # adding meta-tags to a page.
  # It is exactly like react_component except for the following:
  # 1. prerender: true is automatically added, as this method doesn't make sense for client only
  #    rendering.
  # 2. Your JavaScript Render-Function for server rendering must return an Object rather than a React component.
  # 3. Your view code must expect an object and not a string.
  #
  # Here is an example of the view code:
  #    <% react_helmet_app = react_component_hash("ReactHelmetApp", prerender: true,
  #                                               props: { helloWorldData: { name: "Mr. Server Side Rendering"}},
  #                                               id: "react-helmet-0", trace: true) %>
  #    <% content_for :title do %>
  #      <%= react_helmet_app['title'] %>
  #    <% end %>
  #    <%= react_helmet_app["componentHtml"] %>
  #
  # source://react_on_rails//lib/react_on_rails/helper.rb#169
  def react_component_hash(component_name, options = T.unsafe(nil)); end

  # Separate initialization of store from react_component allows multiple react_component calls to
  # use the same Redux store.
  #
  # NOTE: This technique not recommended as it prevents dynamic code splitting for performance.
  # Instead, you should use the standard react_component view helper.
  #
  # store_name: name of the store, corresponding to your call to ReactOnRails.registerStores in your
  #             JavaScript code.
  # props: Ruby Hash or JSON string which contains the properties to pass to the redux store.
  # Options
  #    defer: false -- pass as true if you wish to render this below your component.
  #
  # source://react_on_rails//lib/react_on_rails/helper.rb#210
  def redux_store(store_name, props: T.unsafe(nil), defer: T.unsafe(nil)); end

  # Place this view helper (no parameters) at the end of your shared layout. This tell
  # ReactOnRails where to client render the redux store hydration data. Since we're going
  # to be setting up the stores in the controllers, we need to know where on the view to put the
  # client side rendering of this hydration data, which is a hidden div with a matching class
  # that contains a data props.
  #
  # source://react_on_rails//lib/react_on_rails/helper.rb#231
  def redux_store_hydration_data; end

  # source://react_on_rails//lib/react_on_rails/helper.rb#239
  def sanitized_props_string(props); end

  # Helper method to take javascript expression and returns the output from evaluating it.
  # If you have more than one line that needs to be executed, wrap it in an IIFE.
  # JS exceptions are caught and console messages are handled properly.
  # Options include:{ prerender:, trace:, raise_on_prerender_error:, throw_js_errors: }
  #
  # source://react_on_rails//lib/react_on_rails/helper.rb#247
  def server_render_js(js_expression, options = T.unsafe(nil)); end

  # Streams a server-side rendered React component using React's `renderToPipeableStream`.
  # Supports React 18 features like Suspense, concurrent rendering, and selective hydration.
  # Enables progressive rendering and improved performance for large components.
  #
  # Note: This function can only be used with React on Rails Pro.
  # The view that uses this function must be rendered using the
  # `stream_view_containing_react_components` method from the React on Rails Pro gem.
  #
  # Example of an async React component that can benefit from streaming:
  #
  # const AsyncComponent = async () => {
  #   const data = await fetchData();
  #   return <div>{data}</div>;
  # };
  #
  # function App() {
  #   return (
  #     <Suspense fallback={<div>Loading...</div>}>
  #       <AsyncComponent />
  #     </Suspense>
  #   );
  # }
  #
  # Any other options are passed to the content tag, including the id.
  #
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @option options
  # @param component_name [String] Name of your registered component
  # @param options [Hash] Options for rendering
  #
  # source://react_on_rails//lib/react_on_rails/helper.rb#126
  def stream_react_component(component_name, options = T.unsafe(nil)); end

  private

  # source://react_on_rails//lib/react_on_rails/helper.rb#458
  def build_react_component_result_for_server_rendered_hash(server_rendered_html: T.unsafe(nil), component_specification_tag: T.unsafe(nil), console_script: T.unsafe(nil), render_options: T.unsafe(nil)); end

  # source://react_on_rails//lib/react_on_rails/helper.rb#405
  def build_react_component_result_for_server_rendered_string(server_rendered_html: T.unsafe(nil), component_specification_tag: T.unsafe(nil), console_script: T.unsafe(nil), render_options: T.unsafe(nil)); end

  # source://react_on_rails//lib/react_on_rails/helper.rb#432
  def build_react_component_result_for_server_streamed_content(rendered_html_stream:, component_specification_tag:, render_options:); end

  # source://react_on_rails//lib/react_on_rails/helper.rb#492
  def compose_react_component_html_with_spec_and_console(component_specification_tag, rendered_output, console_script); end

  # source://react_on_rails//lib/react_on_rails/helper.rb#401
  def generated_components_pack_path(component_name); end

  # @return [Boolean]
  #
  # source://react_on_rails//lib/react_on_rails/helper.rb#681
  def in_mailer?; end

  # source://react_on_rails//lib/react_on_rails/helper.rb#654
  def initialize_redux_stores; end

  # source://react_on_rails//lib/react_on_rails/helper.rb#520
  def internal_react_component(react_component_name, options = T.unsafe(nil)); end

  # source://react_on_rails//lib/react_on_rails/helper.rb#391
  def internal_stream_react_component(component_name, options = T.unsafe(nil)); end

  # prepend the rails_context if not yet applied
  #
  # source://react_on_rails//lib/react_on_rails/helper.rb#516
  def prepend_render_rails_context(render_value); end

  # source://react_on_rails//lib/react_on_rails/helper.rb#569
  def props_string(props); end

  # source://react_on_rails//lib/react_on_rails/helper.rb#502
  def rails_context_if_not_already_rendered; end

  # @raise [ReactOnRails::Error]
  #
  # source://react_on_rails//lib/react_on_rails/helper.rb#694
  def raise_missing_autoloaded_bundle(react_component_name); end

  # @raise [ReactOnRails::PrerenderError]
  #
  # source://react_on_rails//lib/react_on_rails/helper.rb#573
  def raise_prerender_error(json_result, react_component_name, props, js_code); end

  # source://react_on_rails//lib/react_on_rails/helper.rb#560
  def render_redux_store_data(redux_store_data); end

  # source://react_on_rails//lib/react_on_rails/helper.rb#677
  def replay_console_option(val); end

  # Returns object with values that are NOT html_safe!
  #
  # source://react_on_rails//lib/react_on_rails/helper.rb#593
  def server_rendered_react_component(render_options); end

  # @return [Boolean]
  #
  # source://react_on_rails//lib/react_on_rails/helper.rb#583
  def should_raise_streaming_prerender_error?(chunk_json_result, render_options); end
end

# source://react_on_rails//lib/react_on_rails/helper.rb#19
ReactOnRails::Helper::COMPONENT_HTML_KEY = T.let(T.unsafe(nil), String)

# source://react_on_rails//lib/react_on_rails/json_output.rb#6
class ReactOnRails::JsonOutput
  class << self
    # source://react_on_rails//lib/react_on_rails/json_output.rb#7
    def escape(json); end
  end
end

# source://react_on_rails//lib/react_on_rails/json_parse_error.rb#4
class ReactOnRails::JsonParseError < ::ReactOnRails::Error
  # @return [JsonParseError] a new instance of JsonParseError
  #
  # source://react_on_rails//lib/react_on_rails/json_parse_error.rb#7
  def initialize(parse_error:, json:); end

  # Returns the value of attribute json.
  #
  # source://react_on_rails//lib/react_on_rails/json_parse_error.rb#5
  def json; end

  # source://react_on_rails//lib/react_on_rails/json_parse_error.rb#17
  def raven_context; end

  # source://react_on_rails//lib/react_on_rails/json_parse_error.rb#21
  def to_error_context; end

  # source://react_on_rails//lib/react_on_rails/json_parse_error.rb#13
  def to_honeybadger_context; end
end

# source://react_on_rails//lib/react_on_rails/locales/base.rb#6
module ReactOnRails::Locales
  class << self
    # source://react_on_rails//lib/react_on_rails/locales/base.rb#7
    def compile; end

    private

    # @raise [ReactOnRails::Error]
    #
    # source://react_on_rails//lib/react_on_rails/locales/base.rb#24
    def check_config_directory_exists(directory:, key_name:, remove_if:); end
  end
end

# source://react_on_rails//lib/react_on_rails/locales/base.rb#38
class ReactOnRails::Locales::Base
  # @return [Base] a new instance of Base
  #
  # source://react_on_rails//lib/react_on_rails/locales/base.rb#39
  def initialize; end

  private

  # source://react_on_rails//lib/react_on_rails/locales/base.rb#101
  def convert; end

  # source://react_on_rails//lib/react_on_rails/locales/base.rb#97
  def default_locale; end

  # source://react_on_rails//lib/react_on_rails/locales/base.rb#57
  def exist_files; end

  # source://react_on_rails//lib/react_on_rails/locales/base.rb#75
  def file(name); end

  # source://react_on_rails//lib/react_on_rails/locales/base.rb#49
  def file_format; end

  # source://react_on_rails//lib/react_on_rails/locales/base.rb#67
  def file_names; end

  # source://react_on_rails//lib/react_on_rails/locales/base.rb#71
  def files; end

  # source://react_on_rails//lib/react_on_rails/locales/base.rb#61
  def files_are_outdated; end

  # source://react_on_rails//lib/react_on_rails/locales/base.rb#144
  def flatten(translations); end

  # source://react_on_rails//lib/react_on_rails/locales/base.rb#137
  def flatten_defaults(val); end

  # source://react_on_rails//lib/react_on_rails/locales/base.rb#133
  def format(input); end

  # source://react_on_rails//lib/react_on_rails/locales/base.rb#109
  def generate_file(template, path); end

  # source://react_on_rails//lib/react_on_rails/locales/base.rb#114
  def generate_translations; end

  # source://react_on_rails//lib/react_on_rails/locales/base.rb#89
  def i18n_dir; end

  # source://react_on_rails//lib/react_on_rails/locales/base.rb#93
  def i18n_yml_dir; end

  # source://react_on_rails//lib/react_on_rails/locales/base.rb#79
  def locale_files; end

  # @return [Boolean]
  #
  # source://react_on_rails//lib/react_on_rails/locales/base.rb#51
  def obsolete?; end

  # source://react_on_rails//lib/react_on_rails/locales/base.rb#162
  def template_default; end

  # source://react_on_rails//lib/react_on_rails/locales/base.rb#156
  def template_translations; end
end

# source://react_on_rails//lib/react_on_rails/locales/to_js.rb#7
class ReactOnRails::Locales::ToJs < ::ReactOnRails::Locales::Base
  private

  # source://react_on_rails//lib/react_on_rails/locales/to_js.rb#10
  def file_format; end

  # source://react_on_rails//lib/react_on_rails/locales/to_js.rb#20
  def template_default; end

  # source://react_on_rails//lib/react_on_rails/locales/to_js.rb#14
  def template_translations; end
end

# source://react_on_rails//lib/react_on_rails/locales/to_json.rb#7
class ReactOnRails::Locales::ToJson < ::ReactOnRails::Locales::Base
  private

  # source://react_on_rails//lib/react_on_rails/locales/to_json.rb#10
  def file_format; end

  # source://react_on_rails//lib/react_on_rails/locales/to_json.rb#18
  def template_default; end

  # source://react_on_rails//lib/react_on_rails/locales/to_json.rb#14
  def template_translations; end
end

# source://react_on_rails//lib/react_on_rails/packer_utils.rb#4
module ReactOnRails::PackerUtils
  class << self
    # This returns either a URL for the webpack-dev-server, non-server bundle or
    # the hashed server bundle if using the same bundle for the client.
    # Otherwise returns a file path.
    #
    # source://react_on_rails//lib/react_on_rails/packer_utils.rb#70
    def bundle_js_uri_from_packer(bundle_name); end

    # source://react_on_rails//lib/react_on_rails/packer_utils.rb#118
    def check_manifest_not_cached; end

    # @return [Boolean]
    #
    # source://react_on_rails//lib/react_on_rails/packer_utils.rb#42
    def dev_server_running?; end

    # @return [Boolean]
    #
    # source://react_on_rails//lib/react_on_rails/packer_utils.rb#110
    def manifest_exists?; end

    # @return [Boolean]
    #
    # source://react_on_rails//lib/react_on_rails/packer_utils.rb#102
    def nested_entries?; end

    # source://react_on_rails//lib/react_on_rails/packer_utils.rb#31
    def packer; end

    # source://react_on_rails//lib/react_on_rails/packer_utils.rb#106
    def packer_public_output_path; end

    # source://react_on_rails//lib/react_on_rails/packer_utils.rb#98
    def packer_source_entry_path; end

    # source://react_on_rails//lib/react_on_rails/packer_utils.rb#94
    def packer_source_path; end

    # @return [Boolean]
    #
    # source://react_on_rails//lib/react_on_rails/packer_utils.rb#114
    def packer_source_path_explicit?; end

    # source://react_on_rails//lib/react_on_rails/packer_utils.rb#24
    def packer_type; end

    # @return [Boolean]
    #
    # source://react_on_rails//lib/react_on_rails/packer_utils.rb#87
    def precompile?; end

    # @raise [ReactOnRails::Error]
    #
    # source://react_on_rails//lib/react_on_rails/packer_utils.rb#142
    def raise_nested_entries_disabled; end

    # @raise [ReactOnRails::Error]
    #
    # source://react_on_rails//lib/react_on_rails/packer_utils.rb#162
    def raise_shakapacker_not_installed; end

    # @raise [ReactOnRails::Error]
    #
    # source://react_on_rails//lib/react_on_rails/packer_utils.rb#152
    def raise_shakapacker_version_incompatible_for_autobundling; end

    # source://react_on_rails//lib/react_on_rails/packer_utils.rb#172
    def semver_to_string(ary); end

    # source://react_on_rails//lib/react_on_rails/packer_utils.rb#48
    def shakapacker_version; end

    # source://react_on_rails//lib/react_on_rails/packer_utils.rb#55
    def shakapacker_version_as_array; end

    # @return [Boolean]
    #
    # source://react_on_rails//lib/react_on_rails/packer_utils.rb#61
    def shakapacker_version_requirement_met?(required_version); end

    # @return [Boolean]
    #
    # source://react_on_rails//lib/react_on_rails/packer_utils.rb#5
    def using_packer?; end

    # @return [Boolean]
    #
    # source://react_on_rails//lib/react_on_rails/packer_utils.rb#9
    def using_shakapacker_const?; end

    # @return [Boolean]
    #
    # source://react_on_rails//lib/react_on_rails/packer_utils.rb#16
    def using_webpacker_const?; end

    # source://react_on_rails//lib/react_on_rails/packer_utils.rb#130
    def webpack_assets_status_checker; end
  end
end

# source://react_on_rails//lib/react_on_rails/packs_generator.rb#7
class ReactOnRails::PacksGenerator
  # source://react_on_rails//lib/react_on_rails/packs_generator.rb#15
  def generate_packs_if_stale; end

  private

  # source://react_on_rails//lib/react_on_rails/packs_generator.rb#83
  def add_generated_pack_to_server_bundle; end

  # source://react_on_rails//lib/react_on_rails/packs_generator.rb#112
  def clean_generated_packs_directory; end

  # source://react_on_rails//lib/react_on_rails/packs_generator.rb#163
  def client_component_to_path; end

  # source://react_on_rails//lib/react_on_rails/packs_generator.rb#158
  def common_component_to_path; end

  # source://react_on_rails//lib/react_on_rails/packs_generator.rb#148
  def component_name(file_path); end

  # source://react_on_rails//lib/react_on_rails/packs_generator.rb#154
  def component_name_to_path(paths); end

  # source://react_on_rails//lib/react_on_rails/packs_generator.rb#187
  def components_search_path; end

  # source://react_on_rails//lib/react_on_rails/packs_generator.rb#38
  def create_pack(file_path); end

  # source://react_on_rails//lib/react_on_rails/packs_generator.rb#57
  def create_server_pack; end

  # source://react_on_rails//lib/react_on_rails/packs_generator.rb#31
  def generate_packs; end

  # source://react_on_rails//lib/react_on_rails/packs_generator.rb#144
  def generated_pack_path(file_path); end

  # source://react_on_rails//lib/react_on_rails/packs_generator.rb#122
  def generated_packs_directory_path; end

  # source://react_on_rails//lib/react_on_rails/packs_generator.rb#100
  def generated_server_bundle_file_path; end

  # source://react_on_rails//lib/react_on_rails/packs_generator.rb#64
  def generated_server_pack_file_content; end

  # source://react_on_rails//lib/react_on_rails/packs_generator.rb#47
  def pack_file_contents(file_path); end

  # @raise [ReactOnRails::Error]
  #
  # source://react_on_rails//lib/react_on_rails/packs_generator.rb#193
  def raise_client_component_overrides_common(component_name); end

  # @raise [ReactOnRails::Error]
  #
  # source://react_on_rails//lib/react_on_rails/packs_generator.rb#213
  def raise_missing_client_component(component_name); end

  # @raise [ReactOnRails::Error]
  #
  # source://react_on_rails//lib/react_on_rails/packs_generator.rb#203
  def raise_server_component_overrides_common(component_name); end

  # source://react_on_rails//lib/react_on_rails/packs_generator.rb#128
  def relative_component_path_from_generated_pack(ror_component_path); end

  # source://react_on_rails//lib/react_on_rails/packs_generator.rb#136
  def relative_path(from, to); end

  # source://react_on_rails//lib/react_on_rails/packs_generator.rb#117
  def server_bundle_entrypoint; end

  # source://react_on_rails//lib/react_on_rails/packs_generator.rb#173
  def server_component_to_path; end

  # @return [Boolean]
  #
  # source://react_on_rails//lib/react_on_rails/packs_generator.rb#222
  def stale_or_missing_packs?; end

  class << self
    # source://react_on_rails//lib/react_on_rails/packs_generator.rb#11
    def instance; end
  end
end

# source://react_on_rails//lib/react_on_rails/packs_generator.rb#8
ReactOnRails::PacksGenerator::CONTAINS_CLIENT_OR_SERVER_REGEX = T.let(T.unsafe(nil), Regexp)

# source://react_on_rails//lib/react_on_rails/packs_generator.rb#9
ReactOnRails::PacksGenerator::MINIMUM_SHAKAPACKER_VERSION = T.let(T.unsafe(nil), Array)

# source://react_on_rails//lib/react_on_rails/prerender_error.rb#5
class ReactOnRails::PrerenderError < ::ReactOnRails::Error
  # err might be nil if JS caught the error
  #
  # @return [PrerenderError] a new instance of PrerenderError
  #
  # source://react_on_rails//lib/react_on_rails/prerender_error.rb#12
  def initialize(component_name: T.unsafe(nil), err: T.unsafe(nil), props: T.unsafe(nil), js_code: T.unsafe(nil), console_messages: T.unsafe(nil)); end

  # TODO: Consider remove providing original `err` as already have access to `self.cause`
  # http://blog.honeybadger.io/nested-errors-in-ruby-with-exception-cause/
  #
  # source://react_on_rails//lib/react_on_rails/prerender_error.rb#9
  def component_name; end

  # TODO: Consider remove providing original `err` as already have access to `self.cause`
  # http://blog.honeybadger.io/nested-errors-in-ruby-with-exception-cause/
  #
  # source://react_on_rails//lib/react_on_rails/prerender_error.rb#9
  def console_messages; end

  # TODO: Consider remove providing original `err` as already have access to `self.cause`
  # http://blog.honeybadger.io/nested-errors-in-ruby-with-exception-cause/
  #
  # source://react_on_rails//lib/react_on_rails/prerender_error.rb#9
  def err; end

  # TODO: Consider remove providing original `err` as already have access to `self.cause`
  # http://blog.honeybadger.io/nested-errors-in-ruby-with-exception-cause/
  #
  # source://react_on_rails//lib/react_on_rails/prerender_error.rb#9
  def js_code; end

  # TODO: Consider remove providing original `err` as already have access to `self.cause`
  # http://blog.honeybadger.io/nested-errors-in-ruby-with-exception-cause/
  #
  # source://react_on_rails//lib/react_on_rails/prerender_error.rb#9
  def props; end

  # source://react_on_rails//lib/react_on_rails/prerender_error.rb#29
  def raven_context; end

  # source://react_on_rails//lib/react_on_rails/prerender_error.rb#33
  def to_error_context; end

  # source://react_on_rails//lib/react_on_rails/prerender_error.rb#25
  def to_honeybadger_context; end

  private

  # source://react_on_rails//lib/react_on_rails/prerender_error.rb#48
  def calc_message(component_name, console_messages, err, js_code, props); end
end

# source://react_on_rails//lib/react_on_rails/prerender_error.rb#6
ReactOnRails::PrerenderError::MAX_ERROR_SNIPPET_TO_LOG = T.let(T.unsafe(nil), Integer)

# source://react_on_rails//lib/react_on_rails/react_component/render_options.rb#6
module ReactOnRails::ReactComponent; end

# source://react_on_rails//lib/react_on_rails/react_component/render_options.rb#7
class ReactOnRails::ReactComponent::RenderOptions
  include ::ReactOnRails::Utils::Required

  # TODO: remove the required for named params
  #
  # @return [RenderOptions] a new instance of RenderOptions
  #
  # source://react_on_rails//lib/react_on_rails/react_component/render_options.rb#15
  def initialize(react_component_name: T.unsafe(nil), options: T.unsafe(nil)); end

  # source://react_on_rails//lib/react_on_rails/react_component/render_options.rb#74
  def auto_load_bundle; end

  # source://react_on_rails//lib/react_on_rails/react_component/render_options.rb#30
  def client_props; end

  # source://react_on_rails//lib/react_on_rails/react_component/render_options.rb#48
  def dom_id; end

  # source://react_on_rails//lib/react_on_rails/react_component/render_options.rb#98
  def force_load; end

  # source://react_on_rails//lib/react_on_rails/react_component/render_options.rb#66
  def html_options; end

  # source://react_on_rails//lib/react_on_rails/react_component/render_options.rb#106
  def internal_option(key); end

  # source://react_on_rails//lib/react_on_rails/react_component/render_options.rb#94
  def logging_on_server; end

  # source://react_on_rails//lib/react_on_rails/react_component/render_options.rb#70
  def prerender; end

  # source://react_on_rails//lib/react_on_rails/react_component/render_options.rb#26
  def props; end

  # source://react_on_rails//lib/react_on_rails/react_component/render_options.rb#90
  def raise_non_shell_server_rendering_errors; end

  # source://react_on_rails//lib/react_on_rails/react_component/render_options.rb#86
  def raise_on_prerender_error; end

  # source://react_on_rails//lib/react_on_rails/react_component/render_options.rb#44
  def random_dom_id; end

  # @return [Boolean]
  #
  # source://react_on_rails//lib/react_on_rails/react_component/render_options.rb#58
  def random_dom_id?; end

  # Returns the value of attribute react_component_name.
  #
  # source://react_on_rails//lib/react_on_rails/react_component/render_options.rb#20
  def react_component_name; end

  # source://react_on_rails//lib/react_on_rails/react_component/render_options.rb#82
  def replay_console; end

  # Returns the value of attribute request_digest.
  #
  # source://react_on_rails//lib/react_on_rails/react_component/render_options.rb#10
  def request_digest; end

  # Sets the attribute request_digest
  #
  # @param value the value to set the attribute request_digest to.
  #
  # source://react_on_rails//lib/react_on_rails/react_component/render_options.rb#10
  def request_digest=(_arg0); end

  # source://react_on_rails//lib/react_on_rails/react_component/render_options.rb#110
  def set_option(key, value); end

  # @return [Boolean]
  #
  # source://react_on_rails//lib/react_on_rails/react_component/render_options.rb#114
  def stream?; end

  # source://react_on_rails//lib/react_on_rails/react_component/render_options.rb#22
  def throw_js_errors; end

  # source://react_on_rails//lib/react_on_rails/react_component/render_options.rb#102
  def to_s; end

  # source://react_on_rails//lib/react_on_rails/react_component/render_options.rb#78
  def trace; end

  private

  # source://react_on_rails//lib/react_on_rails/react_component/render_options.rb#122
  def base_dom_id; end

  # source://react_on_rails//lib/react_on_rails/react_component/render_options.rb#126
  def generate_unique_dom_id; end

  # Returns the value of attribute options.
  #
  # source://react_on_rails//lib/react_on_rails/react_component/render_options.rb#120
  def options; end

  # source://react_on_rails//lib/react_on_rails/react_component/render_options.rb#130
  def retrieve_configuration_value_for(key); end

  # source://react_on_rails//lib/react_on_rails/react_component/render_options.rb#136
  def retrieve_react_on_rails_pro_config_value_for(key); end
end

# source://react_on_rails//lib/react_on_rails/react_component/render_options.rb#12
ReactOnRails::ReactComponent::RenderOptions::NO_PROPS = T.let(T.unsafe(nil), Hash)

# source://react_on_rails//lib/react_on_rails/server_rendering_js_code.rb#4
module ReactOnRails::ServerRenderingJsCode
  class << self
    # source://react_on_rails//lib/react_on_rails/server_rendering_js_code.rb#6
    def js_code_renderer; end

    # source://react_on_rails//lib/react_on_rails/server_rendering_js_code.rb#37
    def render(props_string, rails_context, redux_stores, react_component_name, render_options); end

    # source://react_on_rails//lib/react_on_rails/server_rendering_js_code.rb#14
    def server_rendering_component_js_code(props_string: T.unsafe(nil), rails_context: T.unsafe(nil), redux_stores: T.unsafe(nil), react_component_name: T.unsafe(nil), render_options: T.unsafe(nil)); end
  end
end

# source://react_on_rails//lib/react_on_rails/server_rendering_pool/ruby_embedded_java_script.rb#7
module ReactOnRails::ServerRenderingPool
  class << self
    # source://react_on_rails//lib/react_on_rails/server_rendering_pool.rb#11
    def pool; end

    # source://react_on_rails//lib/react_on_rails/server_rendering_pool.rb#19
    def reset_pool(*_arg0, **_arg1, &_arg2); end

    # source://react_on_rails//lib/react_on_rails/server_rendering_pool.rb#19
    def reset_pool_if_server_bundle_was_modified(*_arg0, **_arg1, &_arg2); end

    # source://react_on_rails//lib/react_on_rails/server_rendering_pool.rb#21
    def server_render_js_with_console_logging(js_code, render_options); end
  end
end

# source://react_on_rails//lib/react_on_rails/server_rendering_pool/ruby_embedded_java_script.rb#9
class ReactOnRails::ServerRenderingPool::RubyEmbeddedJavaScript
  class << self
    # Reimplement console methods for replaying on the client
    # Save a handle to the original console if needed.
    #
    # source://react_on_rails//lib/react_on_rails/server_rendering_pool/ruby_embedded_java_script.rb#195
    def console_polyfill; end

    # source://react_on_rails//lib/react_on_rails/server_rendering_pool/ruby_embedded_java_script.rb#125
    def create_js_context; end

    # source://react_on_rails//lib/react_on_rails/server_rendering_pool/ruby_embedded_java_script.rb#105
    def eval_js(js_code, _render_options); end

    # js_code: JavaScript expression that returns a string.
    # render_options: lib/react_on_rails/react_component/render_options.rb
    # Using these options:
    #    trace: saves the executed JS to a file, used in development
    #    logging_on_server: put on server logs, not just in browser console
    #
    # Returns a Hash:
    #   html: string of HTML for direct insertion on the page by evaluating js_code
    #   consoleReplayScript: script for replaying console
    #   hasErrors: true if server rendering errors
    # Note, js_code does not have to be based on React.
    # js_code MUST RETURN json stringify Object
    # Calling code will probably call 'html_safe' on return value before rendering to the view.
    #
    # source://react_on_rails//lib/react_on_rails/server_rendering_pool/ruby_embedded_java_script.rb#50
    def exec_server_render_js(js_code, render_options, js_evaluator = T.unsafe(nil)); end

    # source://react_on_rails//lib/react_on_rails/server_rendering_pool/ruby_embedded_java_script.rb#156
    def execjs_timer_polyfills; end

    # source://react_on_rails//lib/react_on_rails/server_rendering_pool/ruby_embedded_java_script.rb#111
    def read_bundle_js_code; end

    # source://react_on_rails//lib/react_on_rails/server_rendering_pool/ruby_embedded_java_script.rb#11
    def reset_pool; end

    # source://react_on_rails//lib/react_on_rails/server_rendering_pool/ruby_embedded_java_script.rb#19
    def reset_pool_if_server_bundle_was_modified; end

    # source://react_on_rails//lib/react_on_rails/server_rendering_pool/ruby_embedded_java_script.rb#87
    def trace_js_code_used(msg, js_code, file_name = T.unsafe(nil), force: T.unsafe(nil)); end

    # source://react_on_rails//lib/react_on_rails/server_rendering_pool/ruby_embedded_java_script.rb#184
    def undefined_for_exec_js_logging(function_name); end

    private

    # source://react_on_rails//lib/react_on_rails/server_rendering_pool/ruby_embedded_java_script.rb#218
    def file_url_to_string(url); end

    # source://react_on_rails//lib/react_on_rails/server_rendering_pool/ruby_embedded_java_script.rb#229
    def parse_result_and_replay_console_messages(result_string, render_options); end
  end
end

# source://react_on_rails//lib/react_on_rails/test_helper.rb#4
module ReactOnRails::TestHelper
  class << self
    # Because you will probably want to run RSpec tests that rely on compiled webpack assets
    # (typically, your integration/feature specs where `js: true`), you will want to ensure you
    # don't accidentally run tests on missing or stale webpack assets. If you did use stale
    # Webpack assets, you will get invalid test results as your tests do not use the very latest
    # JavaScript code.
    #
    # Call this method from inside of the `RSpec.configure` block in your `spec/rails_helper.rb`
    # file, passing the config as an argument. You can customize this to your particular needs by
    # replacing any of the default components.
    #
    # RSpec.configure do |config|
    #   ReactOnRails::TestHelper.configure_rspec_to_compile_assets(config)
    #
    # You can pass an RSpec metatag as an list of parameter to this helper method
    # if you want this helper to run on examples other than where `js: true` or
    # `server_rendering: true` (default). The helper will compile webpack files at most
    # once per test run.
    #
    # If you do not want to be slowed down by re-compiling webpack assets from scratch every test
    # run, you can call `yarn run build:client` (and `yarn run build:server` if doing server
    # rendering) to have webpack recompile these files in the background, which will be *much*
    # faster. The helper looks for these processes and will abort recompiling if it finds them
    # to be running.
    #
    # See docs/additional-reading/rspec-configuration.md for more info
    #
    # Params:
    # config - config for rspec
    # metatags - metatags to add the ensure_assets_compiled check.
    #            Default is :js, :server_rendering, :controller
    #
    # source://react_on_rails//lib/react_on_rails/test_helper.rb#35
    def configure_rspec_to_compile_assets(config, *metatags); end

    # Main entry point to ensuring assets are compiled. See `configure_rspec_to_compile_assets` for
    # an example of usage.
    #
    # Typical usage passes all params as nil defaults.
    # webpack_assets_status_checker: provide: `up_to_date?`, `whats_not_up_to_date`, `source_path`
    #                         defaults to ReactOnRails::TestHelper::WebpackAssetsStatusChecker
    # webpack_assets_compiler: provide one method: `def compile`
    #                         defaults to ReactOnRails::TestHelper::WebpackAssetsCompiler
    # source_path and generated_assets_full_path are passed into the default webpack_assets_status_checker if you
    #                        don't provide one.
    # webpack_generated_files List of files to check for up-to-date-status, defaulting to
    #                        webpack_generated_files in your configuration
    #
    # source://react_on_rails//lib/react_on_rails/test_helper.rb#65
    def ensure_assets_compiled(webpack_assets_status_checker: T.unsafe(nil), webpack_assets_compiler: T.unsafe(nil), source_path: T.unsafe(nil), generated_assets_full_path: T.unsafe(nil), webpack_generated_files: T.unsafe(nil)); end
  end
end

# source://react_on_rails//lib/react_on_rails/test_helper/ensure_assets_compiled.rb#5
class ReactOnRails::TestHelper::EnsureAssetsCompiled
  # @return [EnsureAssetsCompiled] a new instance of EnsureAssetsCompiled
  #
  # source://react_on_rails//lib/react_on_rails/test_helper/ensure_assets_compiled.rb#15
  def initialize(webpack_assets_status_checker: T.unsafe(nil), webpack_assets_compiler: T.unsafe(nil)); end

  # Several Scenarios:
  # 1. No webpack watch processes for static assets and files are missing or out of date.
  # 2. Only webpack watch process for server bundle as we're the hot reloading setup.
  # 3. For whatever reason, the watch processes are running, but some clean script removed
  #    the generated bundles.
  #
  # source://react_on_rails//lib/react_on_rails/test_helper/ensure_assets_compiled.rb#26
  def call; end

  # source://react_on_rails//lib/react_on_rails/test_helper/ensure_assets_compiled.rb#48
  def puts_start_compile_check_message(stale_files); end

  # Returns the value of attribute webpack_assets_compiler.
  #
  # source://react_on_rails//lib/react_on_rails/test_helper/ensure_assets_compiled.rb#12
  def webpack_assets_compiler; end

  # Returns the value of attribute webpack_assets_status_checker.
  #
  # source://react_on_rails//lib/react_on_rails/test_helper/ensure_assets_compiled.rb#12
  def webpack_assets_status_checker; end

  class << self
    # Returns the value of attribute has_been_run.
    #
    # source://react_on_rails//lib/react_on_rails/test_helper/ensure_assets_compiled.rb#7
    def has_been_run; end

    # Sets the attribute has_been_run
    #
    # @param value the value to set the attribute has_been_run to.
    #
    # source://react_on_rails//lib/react_on_rails/test_helper/ensure_assets_compiled.rb#7
    def has_been_run=(_arg0); end
  end
end

# source://react_on_rails//lib/react_on_rails/test_helper/webpack_assets_compiler.rb#7
class ReactOnRails::TestHelper::WebpackAssetsCompiler
  # source://react_on_rails//lib/react_on_rails/test_helper/webpack_assets_compiler.rb#8
  def compile_assets; end
end

# source://react_on_rails//lib/react_on_rails/test_helper/webpack_assets_status_checker.rb#11
class ReactOnRails::TestHelper::WebpackAssetsStatusChecker
  include ::ReactOnRails::Utils::Required

  # @return [WebpackAssetsStatusChecker] a new instance of WebpackAssetsStatusChecker
  #
  # source://react_on_rails//lib/react_on_rails/test_helper/webpack_assets_status_checker.rb#18
  def initialize(generated_assets_full_path: T.unsafe(nil), source_path: T.unsafe(nil), webpack_generated_files: T.unsafe(nil)); end

  # source_path is typically configured in the (shaka/web)packer.yml file
  # for `source_path`
  # or for legacy React on Rails, it's /client, where all client files go
  #
  # source://react_on_rails//lib/react_on_rails/test_helper/webpack_assets_status_checker.rb#16
  def generated_assets_full_path; end

  # source_path is typically configured in the (shaka/web)packer.yml file
  # for `source_path`
  # or for legacy React on Rails, it's /client, where all client files go
  #
  # source://react_on_rails//lib/react_on_rails/test_helper/webpack_assets_status_checker.rb#16
  def source_path; end

  # source://react_on_rails//lib/react_on_rails/test_helper/webpack_assets_status_checker.rb#32
  def stale_generated_files(files); end

  # source://react_on_rails//lib/react_on_rails/test_helper/webpack_assets_status_checker.rb#28
  def stale_generated_webpack_files; end

  private

  # source://react_on_rails//lib/react_on_rails/test_helper/webpack_assets_status_checker.rb#50
  def all_compiled_assets; end

  # @return [Boolean]
  #
  # source://react_on_rails//lib/react_on_rails/test_helper/webpack_assets_status_checker.rb#85
  def assets_exist?; end

  # source://react_on_rails//lib/react_on_rails/test_helper/webpack_assets_status_checker.rb#77
  def client_files; end

  # source://react_on_rails//lib/react_on_rails/test_helper/webpack_assets_status_checker.rb#89
  def make_file_list(glob); end

  # source://react_on_rails//lib/react_on_rails/test_helper/webpack_assets_status_checker.rb#81
  def make_globs(dirs); end
end

# source://react_on_rails//lib/react_on_rails/utils.rb#10
module ReactOnRails::Utils
  class << self
    # source://react_on_rails//lib/react_on_rails/utils.rb#98
    def bundle_js_file_path(bundle_name); end

    # source://react_on_rails//lib/react_on_rails/utils.rb#201
    def find_most_recent_mtime(files); end

    # @return [Boolean]
    #
    # source://react_on_rails//lib/react_on_rails/utils.rb#156
    def gem_available?(name); end

    # source://react_on_rails//lib/react_on_rails/utils.rb#148
    def generated_assets_full_path; end

    # Invokes command, exiting with a detailed message if there's a failure.
    #
    # source://react_on_rails//lib/react_on_rails/utils.rb#45
    def invoke_and_exit_if_failed(cmd, failure_message); end

    # source://react_on_rails//lib/react_on_rails/utils.rb#36
    def object_to_boolean(value); end

    # source://react_on_rails//lib/react_on_rails/utils.rb#129
    def prepend_cd_node_modules_directory(cmd); end

    # source://react_on_rails//lib/react_on_rails/utils.rb#208
    def prepend_to_file_if_text_not_present(file:, text_to_prepend:, regex:); end

    # source://react_on_rails//lib/react_on_rails/utils.rb#113
    def rails_version_less_than(version); end

    # Todo -- remove this for v13, as we don't need both boolean and number
    #
    # @return [Boolean]
    #
    # source://react_on_rails//lib/react_on_rails/utils.rb#169
    def react_on_rails_pro?; end

    # Return an empty string if React on Rails Pro is not installed
    #
    # source://react_on_rails//lib/react_on_rails/utils.rb#176
    def react_on_rails_pro_version; end

    # @return [Boolean]
    #
    # source://react_on_rails//lib/react_on_rails/utils.rb#109
    def running_on_windows?; end

    # source://react_on_rails//lib/react_on_rails/utils.rb#69
    def server_bundle_js_file_path; end

    # @return [Boolean]
    #
    # source://react_on_rails//lib/react_on_rails/utils.rb#65
    def server_bundle_path_is_http?; end

    # @return [Boolean]
    #
    # source://react_on_rails//lib/react_on_rails/utils.rb#40
    def server_rendering_is_enabled?; end

    # source://react_on_rails//lib/react_on_rails/utils.rb#186
    def smart_trim(str, max_length = T.unsafe(nil)); end

    # source://react_on_rails//lib/react_on_rails/utils.rb#133
    def source_path; end

    # https://forum.shakacode.com/t/yak-of-the-week-ruby-2-4-pathname-empty-changed-to-look-at-file-size/901
    # return object if truthy, else return nil
    #
    # source://react_on_rails//lib/react_on_rails/utils.rb#15
    def truthy_presence(obj); end

    # @return [Boolean]
    #
    # source://react_on_rails//lib/react_on_rails/utils.rb#141
    def using_packer_source_path_is_not_defined_and_custom_node_modules?; end

    # Wraps message and makes it colored.
    # Pass in the msg and color as a symbol.
    #
    # source://react_on_rails//lib/react_on_rails/utils.rb#25
    def wrap_message(msg, color = T.unsafe(nil)); end
  end
end

# source://react_on_rails//lib/react_on_rails/utils.rb#123
module ReactOnRails::Utils::Required
  # @raise [ReactOnRails::Error]
  #
  # source://react_on_rails//lib/react_on_rails/utils.rb#124
  def required(arg_name); end
end

# source://react_on_rails//lib/react_on_rails/utils.rb#11
ReactOnRails::Utils::TRUNCATION_FILLER = T.let(T.unsafe(nil), String)

# source://react_on_rails//lib/react_on_rails/version.rb#4
ReactOnRails::VERSION = T.let(T.unsafe(nil), String)

# Responsible for checking versions of rubygem versus yarn node package
# against each other at runtime.
#
# source://react_on_rails//lib/react_on_rails/version_checker.rb#6
class ReactOnRails::VersionChecker
  # @return [VersionChecker] a new instance of VersionChecker
  #
  # source://react_on_rails//lib/react_on_rails/version_checker.rb#15
  def initialize(node_package_version); end

  # For compatibility, the gem and the node package versions should always match,
  # unless the user really knows what they're doing. So we will give a
  # warning if they do not.
  #
  # source://react_on_rails//lib/react_on_rails/version_checker.rb#22
  def log_if_gem_and_node_package_versions_differ; end

  # Returns the value of attribute node_package_version.
  #
  # source://react_on_rails//lib/react_on_rails/version_checker.rb#7
  def node_package_version; end

  private

  # source://react_on_rails//lib/react_on_rails/version_checker.rb#37
  def common_error_msg; end

  # source://react_on_rails//lib/react_on_rails/version_checker.rb#63
  def gem_major_minor_patch_version; end

  # source://react_on_rails//lib/react_on_rails/version_checker.rb#59
  def gem_version; end

  # source://react_on_rails//lib/react_on_rails/version_checker.rb#48
  def log_differing_versions_warning; end

  # source://react_on_rails//lib/react_on_rails/version_checker.rb#53
  def log_node_semver_version_warning; end

  class << self
    # source://react_on_rails//lib/react_on_rails/version_checker.rb#11
    def build; end
  end
end

# source://react_on_rails//lib/react_on_rails/version_checker.rb#9
ReactOnRails::VersionChecker::MAJOR_MINOR_PATCH_VERSION_REGEX = T.let(T.unsafe(nil), Regexp)

# source://react_on_rails//lib/react_on_rails/version_checker.rb#68
class ReactOnRails::VersionChecker::NodePackageVersion
  # @return [NodePackageVersion] a new instance of NodePackageVersion
  #
  # source://react_on_rails//lib/react_on_rails/version_checker.rb#79
  def initialize(package_json); end

  # @return [Boolean]
  #
  # source://react_on_rails//lib/react_on_rails/version_checker.rb#106
  def local_path_or_url?; end

  # source://react_on_rails//lib/react_on_rails/version_checker.rb#113
  def major_minor_patch; end

  # Returns the value of attribute package_json.
  #
  # source://react_on_rails//lib/react_on_rails/version_checker.rb#69
  def package_json; end

  # source://react_on_rails//lib/react_on_rails/version_checker.rb#83
  def raw; end

  # @return [Boolean]
  #
  # source://react_on_rails//lib/react_on_rails/version_checker.rb#99
  def semver_wildcard?; end

  private

  # source://react_on_rails//lib/react_on_rails/version_checker.rb#126
  def package_json_contents; end

  class << self
    # source://react_on_rails//lib/react_on_rails/version_checker.rb#71
    def build; end

    # source://react_on_rails//lib/react_on_rails/version_checker.rb#75
    def package_json_path; end
  end
end

# source://react_on_rails//lib/react_on_rails/version_syntax_converter.rb#6
class ReactOnRails::VersionSyntaxConverter
  # source://react_on_rails//lib/react_on_rails/version_syntax_converter.rb#14
  def npm_to_rubygem(npm_version); end

  # source://react_on_rails//lib/react_on_rails/version_syntax_converter.rb#7
  def rubygem_to_npm(rubygem_version = T.unsafe(nil)); end
end

module ReactOnRailsHelper
  include ::ReactOnRails::Utils::Required
  include ::ReactOnRails::Helper
end
